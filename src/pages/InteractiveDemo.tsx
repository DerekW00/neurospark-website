import React, { useState, useEffect } from 'react';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Label } from '@/components/ui/label';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Link } from 'react-router-dom';
import { CheckCircle2, Clock, Brain, ArrowRight, Calendar, ListChecks, AlertCircle } from 'lucide-react';
import ApiKeyInput from '@/components/ApiKeyInput';
import { Alert, AlertDescription, AlertTitle } from '@/components/Alert';
import { callLLM, breakdownCommitment } from '@/services/llm';

interface ApiKeyConfig {
    key: string;
    model: string;
}

const InteractiveDemo = () => {
    const [taskInput, setTaskInput] = useState('');
    const [taskTitle, setTaskTitle] = useState('');
    const [isProcessing, setIsProcessing] = useState(false);
    const [showResults, setShowResults] = useState(false);
    const [selectedTask, setSelectedTask] = useState(null);
    const [activeApiKeys, setActiveApiKeys] = useState<{
        openai?: ApiKeyConfig;
        anthropic?: ApiKeyConfig;
        perplexity?: ApiKeyConfig;
    }>({});
    const [apiProvider, setApiProvider] = useState<string>('');
    const [microtasks, setMicrotasks] = useState([]);
    const [error, setError] = useState<string | null>(null);

    // Generate a concise title from the user's task input
    const generateTaskTitle = (input) => {
        if (!input || input.trim() === '') {
            return 'Research Paper: Climate Change';
        }

        // Remove any line breaks and extra whitespace
        const cleanedInput = input.replace(/\n/g, ' ').replace(/\s+/g, ' ').trim();

        // If input is already short, use it directly
        if (cleanedInput.length <= 50) {
            return cleanedInput;
        }

        // Extract first sentence or phrase
        const firstSentence = cleanedInput.split(/[.!?]/, 1)[0];

        if (firstSentence.length <= 50) {
            return firstSentence;
        }

        // Get first 5-8 words for a concise title
        const words = firstSentence.split(' ');
        const shortenedTitle = words.slice(0, Math.min(8, words.length)).join(' ');

        return shortenedTitle.length <= 50 ? shortenedTitle : `${shortenedTitle.substring(0, 47)}...`;
    };

    // Sample microtasks that would be generated by AI if no API key is provided
    const sampleMicrotasks = [
        { id: 1, title: 'Create project outline', duration: 15, completed: false },
        { id: 2, title: 'Gather reference materials', duration: 15, completed: false },
        { id: 3, title: 'Draft introduction section', duration: 15, completed: false },
        { id: 4, title: 'Write main arguments', duration: 15, completed: false },
        { id: 5, title: 'Add supporting examples', duration: 15, completed: false },
        { id: 6, title: 'Create conclusion', duration: 15, completed: false },
        { id: 7, title: 'Review for clarity', duration: 15, completed: false },
        { id: 8, title: 'Format document', duration: 15, completed: false },
    ];

    // Sample AI coaching responses
    const coachingResponses = [
        "I notice you've been working steadily! Great job maintaining focus. Remember to take a short break after this task.",
        "This task might feel challenging, but breaking it down has made it manageable. Which microtask feels most approachable right now?",
        "You're making excellent progress! Remember that perfectionism can be an ADHD trap - done is better than perfect.",
        "If you're feeling stuck, try the 'body doubling' technique - work alongside someone else (even virtually) to help maintain focus."
    ];

    useEffect(() => {
        // Determine which provider to use based on available keys
        if (activeApiKeys.openai) {
            setApiProvider('openai');
        } else if (activeApiKeys.anthropic) {
            setApiProvider('anthropic');
        } else if (activeApiKeys.perplexity) {
            setApiProvider('perplexity');
        } else {
            setApiProvider('');
        }
    }, [activeApiKeys]);

    const handleApiKeysSubmitted = (keys) => {
        setActiveApiKeys(keys);
    };

    const generateMicrotasks = async () => {
        if (!apiProvider || !activeApiKeys[apiProvider]) {
            // Use sample data if no API key is provided
            return sampleMicrotasks;
        }

        try {
            // Use the actual LLM service with the provided API key and model
            const result = await breakdownCommitment(
                apiProvider as any,
                taskInput || 'Write a research paper about climate change',
                'Breaking down the task into manageable microtasks for better productivity.',
                null,
                null,
                activeApiKeys[apiProvider]
            );

            // Add IDs to the microtasks
            return result.map((task, index) => ({
                ...task,
                id: index + 1,
                completed: false
            }));
        } catch (error) {
            console.error('Error generating microtasks:', error);
            setError('Failed to generate microtasks. Please check your API key and try again.');
            return sampleMicrotasks;
        }
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setIsProcessing(true);
        setError(null);

        try {
            // Generate a title for the task
            const generatedTitle = generateTaskTitle(taskInput);
            setTaskTitle(generatedTitle);

            const tasks = await generateMicrotasks();
            setMicrotasks(tasks);
            setShowResults(true);
        } catch (error) {
            console.error('Error:', error);
            setError('Something went wrong. Please try again.');
        } finally {
            setIsProcessing(false);
        }
    };

    const handleTaskSelect = (task) => {
        setSelectedTask(task);
    };

    const handleReset = () => {
        setTaskInput('');
        setTaskTitle('');
        setShowResults(false);
        setSelectedTask(null);
        setError(null);
    };

    const taskListToDisplay = microtasks.length > 0 ? microtasks : sampleMicrotasks;

    // Get model name for display
    const getActiveModelName = () => {
        if (!apiProvider || !activeApiKeys[apiProvider]) return 'Sample Data';

        const model = activeApiKeys[apiProvider].model;
        if (apiProvider === 'openai') {
            if (model === 'gpt-3.5-turbo') return 'GPT-3.5 Turbo';
            if (model === 'gpt-4o') return 'GPT-4o';
            if (model === 'gpt-4o-mini') return 'GPT-4o Mini';
            if (model === 'gpt-4-turbo') return 'GPT-4 Turbo';
        } else if (apiProvider === 'anthropic') {
            if (model === 'claude-3-haiku-20240307') return 'Claude 3 Haiku';
            if (model === 'claude-3-sonnet-20240229') return 'Claude 3 Sonnet';
            if (model === 'claude-3-opus-20240229') return 'Claude 3 Opus';
        } else if (apiProvider === 'perplexity') {
            if (model === 'llama-3-8b-online') return 'Llama 3 8B';
            if (model === 'llama-3-70b-online') return 'Llama 3 70B';
            if (model === 'sonar-small-online') return 'Sonar Small';
        }
        return model;
    };

    return (
        <div className="min-h-screen flex flex-col">
            <Header />
            <main className="flex-grow pt-24 pb-20">
                <section className="py-12 px-4 sm:px-6 lg:px-8">
                    <div className="max-w-6xl mx-auto">
                        <div className="text-center mb-12">
                            <h1 className="text-4xl md:text-5xl font-bold tracking-tight mb-6">
                                Try NeuroSpark Now
                            </h1>
                            <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
                                Experience how NeuroSpark breaks down overwhelming tasks into manageable steps. Enter a task below to see it in action.
                            </p>
                        </div>

                        <div className="mb-8">
                            <ApiKeyInput onKeysSubmitted={handleApiKeysSubmitted} />
                        </div>

                        {error && (
                            <Alert variant="destructive" className="mb-6 max-w-2xl mx-auto">
                                <AlertCircle className="h-4 w-4" />
                                <AlertTitle>Error</AlertTitle>
                                <AlertDescription>{error}</AlertDescription>
                            </Alert>
                        )}

                        {!showResults ? (
                            <Card className="max-w-2xl mx-auto">
                                <CardHeader>
                                    <div className="flex items-center space-x-2 mb-1">
                                        <Brain className="h-5 w-5 text-primary" />
                                        <CardTitle>What would you like to accomplish?</CardTitle>
                                    </div>
                                    <CardDescription>
                                        Describe your project or task, and we'll break it down into ADHD-friendly microtasks of 15-30 minutes each.
                                    </CardDescription>
                                </CardHeader>
                                <CardContent>
                                    <form onSubmit={handleSubmit} className="space-y-6">
                                        <div className="space-y-2">
                                            <Label htmlFor="task" className="text-base font-medium">Task or Project</Label>
                                            <Textarea
                                                id="task"
                                                placeholder="e.g., Write a research paper about climate change"
                                                value={taskInput}
                                                onChange={(e) => setTaskInput(e.target.value)}
                                                className="h-32 text-base"
                                                required
                                            />
                                            <p className="text-xs text-muted-foreground italic">
                                                Tip: Be specific about what you want to achieve. More details help us break it down better.
                                            </p>
                                        </div>
                                        <div>
                                            {apiProvider ? (
                                                <div className="flex items-center bg-primary/5 rounded-md p-2 mb-4">
                                                    <div className="w-2 h-2 bg-primary rounded-full mr-2"></div>
                                                    <p className="text-sm">
                                                        Using <span className="font-medium">{apiProvider.toUpperCase()}</span>
                                                        <span className="mx-1">·</span>
                                                        <span className="text-primary">{getActiveModelName()}</span>
                                                    </p>
                                                </div>
                                            ) : (
                                                <div className="flex items-center bg-muted rounded-md p-2 mb-4">
                                                    <p className="text-sm">
                                                        Using demo mode with sample data. Add an API key above for personalized results.
                                                    </p>
                                                </div>
                                            )}
                                            <Button type="submit" className="w-full" disabled={isProcessing}>
                                                {isProcessing ? (
                                                    <span className="flex items-center">
                                                        <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                                            <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                                                            <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                                        </svg>
                                                        Processing...
                                                    </span>
                                                ) : (
                                                    <span className="flex items-center">
                                                        Break Down My Task
                                                        <ArrowRight className="ml-2 h-4 w-4" />
                                                    </span>
                                                )}
                                            </Button>
                                        </div>
                                    </form>
                                </CardContent>
                            </Card>
                        ) : (
                            <div className="space-y-8">
                                <Card>
                                    <CardHeader className="pb-5">
                                        <div className="flex justify-between items-start">
                                            <div className="space-y-2">
                                                <div className="flex items-center space-x-2">
                                                    <div className="h-1.5 w-1.5 rounded-full bg-primary"></div>
                                                    <p className="text-sm font-medium text-primary uppercase tracking-wider">Task Breakdown</p>
                                                </div>
                                                <CardTitle className="text-2xl">
                                                    {taskTitle || 'Research Paper: Climate Change'}
                                                </CardTitle>
                                                <CardDescription className="flex items-center">
                                                    <span>Broken down into {taskListToDisplay.length} manageable steps</span>
                                                    {apiProvider && (
                                                        <span className="inline-flex items-center ml-3 px-2 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary">
                                                            {getActiveModelName()}
                                                        </span>
                                                    )}
                                                </CardDescription>
                                            </div>
                                            <Button variant="outline" size="sm" onClick={handleReset} className="flex-shrink-0">
                                                Start Over
                                            </Button>
                                        </div>
                                    </CardHeader>
                                    <CardContent>
                                        <Tabs defaultValue="breakdown" className="w-full">
                                            <TabsList className="grid w-full grid-cols-3">
                                                <TabsTrigger value="breakdown">Task Breakdown</TabsTrigger>
                                                <TabsTrigger value="schedule">Suggested Schedule</TabsTrigger>
                                                <TabsTrigger value="coach">AI Coach</TabsTrigger>
                                            </TabsList>

                                            <TabsContent value="breakdown" className="space-y-4">
                                                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-6">
                                                    {taskListToDisplay.map((task) => (
                                                        <div
                                                            key={task.id}
                                                            className={`border rounded-lg p-4 cursor-pointer transition-colors ${selectedTask && selectedTask.id === task.id
                                                                ? 'bg-primary/10 border-primary'
                                                                : 'hover:bg-muted'
                                                                }`}
                                                            onClick={() => handleTaskSelect(task)}
                                                        >
                                                            <div className="flex items-start space-x-3">
                                                                <div className="flex-shrink-0 flex items-center justify-center w-7 h-7 rounded-full bg-primary/10 text-primary font-medium text-sm">
                                                                    {task.id}
                                                                </div>
                                                                <div className="flex-1">
                                                                    <p className="font-medium">{task.title}</p>
                                                                    <div className="flex items-center text-sm text-muted-foreground mt-1">
                                                                        <Clock className="h-3.5 w-3.5 mr-1" />
                                                                        <span>{task.duration} min</span>
                                                                        <span className="mx-1.5">•</span>
                                                                        <span>{task.completed ? 'Completed' : 'Not started'}</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    ))}
                                                </div>

                                                <div className="mt-4 text-sm text-muted-foreground flex items-center justify-center">
                                                    <div className="inline-flex items-center">
                                                        <ArrowRight className="h-3.5 w-3.5 mr-1.5" />
                                                        <span>Tasks are ordered from first to last in sequence</span>
                                                    </div>
                                                </div>

                                                {selectedTask && (
                                                    <Card className="mt-8 border-primary/50">
                                                        <CardHeader>
                                                            <CardTitle className="text-xl">
                                                                <span className="inline-flex items-center justify-center w-6 h-6 rounded-full bg-primary/10 text-primary font-medium text-sm mr-2">
                                                                    {selectedTask.id}
                                                                </span>
                                                                {selectedTask.title}
                                                            </CardTitle>
                                                            <CardDescription>Details and next steps</CardDescription>
                                                        </CardHeader>
                                                        <CardContent className="space-y-4">
                                                            <div>
                                                                <h4 className="font-medium mb-2">Suggested approach:</h4>
                                                                <p className="text-muted-foreground">
                                                                    Focus on this task for just 15 minutes. Set a timer and try to complete it without distractions. If you need more time, you can continue or take a short break.
                                                                </p>
                                                            </div>
                                                            <div className="flex space-x-2">
                                                                <Button className="flex-1">Mark Complete</Button>
                                                                <Button variant="outline" className="flex-1">Reschedule</Button>
                                                            </div>
                                                        </CardContent>
                                                    </Card>
                                                )}
                                            </TabsContent>

                                            <TabsContent value="schedule">
                                                <div className="mt-6 space-y-6">
                                                    <div className="border rounded-lg overflow-hidden">
                                                        <div className="bg-muted p-4 border-b">
                                                            <h3 className="font-medium">Today's Schedule</h3>
                                                        </div>
                                                        <div className="divide-y">
                                                            <div className="p-4 flex items-center justify-between">
                                                                <div className="flex items-center space-x-3">
                                                                    <div className="flex-shrink-0 flex items-center justify-center w-7 h-7 rounded-full bg-primary/10 text-primary font-medium text-sm">
                                                                        1
                                                                    </div>
                                                                    <div>
                                                                        <p className="font-medium">9:00 AM - 9:15 AM</p>
                                                                        <p className="text-sm text-muted-foreground">Create project outline</p>
                                                                    </div>
                                                                </div>
                                                                <Button size="sm" variant="outline">Reschedule</Button>
                                                            </div>
                                                            <div className="p-4 flex items-center justify-between">
                                                                <div className="flex items-center space-x-3">
                                                                    <div className="flex-shrink-0 flex items-center justify-center w-7 h-7 rounded-full bg-primary/10 text-primary font-medium text-sm">
                                                                        2
                                                                    </div>
                                                                    <div>
                                                                        <p className="font-medium">10:30 AM - 10:45 AM</p>
                                                                        <p className="text-sm text-muted-foreground">Gather reference materials</p>
                                                                    </div>
                                                                </div>
                                                                <Button size="sm" variant="outline">Reschedule</Button>
                                                            </div>
                                                            <div className="p-4 flex items-center justify-between">
                                                                <div className="flex items-center space-x-3">
                                                                    <div className="flex-shrink-0 flex items-center justify-center w-7 h-7 rounded-full bg-primary/10 text-primary font-medium text-sm">
                                                                        3
                                                                    </div>
                                                                    <div>
                                                                        <p className="font-medium">2:00 PM - 2:15 PM</p>
                                                                        <p className="text-sm text-muted-foreground">Draft introduction section</p>
                                                                    </div>
                                                                </div>
                                                                <Button size="sm" variant="outline">Reschedule</Button>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                                                        <Card>
                                                            <CardHeader className="pb-2">
                                                                <CardTitle className="text-lg">Energy Levels</CardTitle>
                                                            </CardHeader>
                                                            <CardContent>
                                                                <div className="space-y-2">
                                                                    <div className="flex justify-between items-center">
                                                                        <span>Morning</span>
                                                                        <div className="w-24 h-3 bg-muted rounded-full overflow-hidden">
                                                                            <div className="w-5/6 h-full bg-green-500"></div>
                                                                        </div>
                                                                    </div>
                                                                    <div className="flex justify-between items-center">
                                                                        <span>Afternoon</span>
                                                                        <div className="w-24 h-3 bg-muted rounded-full overflow-hidden">
                                                                            <div className="w-1/2 h-full bg-yellow-500"></div>
                                                                        </div>
                                                                    </div>
                                                                    <div className="flex justify-between items-center">
                                                                        <span>Evening</span>
                                                                        <div className="w-24 h-3 bg-muted rounded-full overflow-hidden">
                                                                            <div className="w-2/3 h-full bg-green-500"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </CardContent>
                                                        </Card>

                                                        <Card>
                                                            <CardHeader className="pb-2">
                                                                <CardTitle className="text-lg">Task Distribution</CardTitle>
                                                            </CardHeader>
                                                            <CardContent>
                                                                <div className="flex items-center justify-center h-20">
                                                                    <div className="flex items-end space-x-2">
                                                                        <div className="h-16 w-8 bg-primary/30 rounded-t"></div>
                                                                        <div className="h-12 w-8 bg-primary/50 rounded-t"></div>
                                                                        <div className="h-8 w-8 bg-primary/70 rounded-t"></div>
                                                                        <div className="h-4 w-8 bg-primary rounded-t"></div>
                                                                    </div>
                                                                </div>
                                                            </CardContent>
                                                        </Card>

                                                        <Card>
                                                            <CardHeader className="pb-2">
                                                                <CardTitle className="text-lg">Focus Times</CardTitle>
                                                            </CardHeader>
                                                            <CardContent>
                                                                <div className="space-y-2 text-center">
                                                                    <p className="text-3xl font-bold text-primary">8:30 - 11:30 AM</p>
                                                                    <p className="text-sm text-muted-foreground">Recommended focus period</p>
                                                                </div>
                                                            </CardContent>
                                                        </Card>
                                                    </div>
                                                </div>
                                            </TabsContent>

                                            <TabsContent value="coach">
                                                <div className="mt-6 space-y-6">
                                                    <div className="border rounded-lg p-6 bg-primary/5">
                                                        <div className="flex items-start space-x-4">
                                                            <Brain className="h-8 w-8 text-primary mt-1" />
                                                            <div>
                                                                <h3 className="font-medium text-lg mb-2">Your AI Coach</h3>
                                                                <p className="text-muted-foreground">
                                                                    {coachingResponses[0]}
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                                        <Card>
                                                            <CardHeader>
                                                                <CardTitle className="text-lg">ADHD-Friendly Strategies</CardTitle>
                                                            </CardHeader>
                                                            <CardContent className="space-y-3">
                                                                <div className="flex items-start space-x-2">
                                                                    <CheckCircle2 className="h-5 w-5 text-primary mt-0.5" />
                                                                    <p>Use the Pomodoro technique: 15 min of focus, then a 5 min break</p>
                                                                </div>
                                                                <div className="flex items-start space-x-2">
                                                                    <CheckCircle2 className="h-5 w-5 text-primary mt-0.5" />
                                                                    <p>Set up a distraction-free environment</p>
                                                                </div>
                                                                <div className="flex items-start space-x-2">
                                                                    <CheckCircle2 className="h-5 w-5 text-primary mt-0.5" />
                                                                    <p>Use visual cues to maintain focus</p>
                                                                </div>
                                                            </CardContent>
                                                        </Card>

                                                        <Card>
                                                            <CardHeader>
                                                                <CardTitle className="text-lg">Progress Metrics</CardTitle>
                                                            </CardHeader>
                                                            <CardContent>
                                                                <div className="space-y-4">
                                                                    <div>
                                                                        <div className="flex justify-between">
                                                                            <span>Task Completion</span>
                                                                            <span>0/8</span>
                                                                        </div>
                                                                        <div className="w-full h-2 bg-muted rounded-full mt-1">
                                                                            <div className="w-0 h-full bg-primary rounded-full"></div>
                                                                        </div>
                                                                    </div>
                                                                    <div>
                                                                        <div className="flex justify-between">
                                                                            <span>Focus Time</span>
                                                                            <span>0 minutes</span>
                                                                        </div>
                                                                        <div className="w-full h-2 bg-muted rounded-full mt-1">
                                                                            <div className="w-0 h-full bg-primary rounded-full"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </CardContent>
                                                        </Card>
                                                    </div>
                                                </div>
                                            </TabsContent>
                                        </Tabs>
                                    </CardContent>
                                </Card>

                                <div className="text-center">
                                    <h3 className="text-2xl font-bold mb-4">Ready to get started with your own tasks?</h3>
                                    <div className="flex flex-wrap justify-center gap-4">
                                        <Button asChild size="lg">
                                            <Link to="/pricing">
                                                Sign Up Now
                                                <ArrowRight className="ml-2 h-4 w-4" />
                                            </Link>
                                        </Button>
                                        <Button variant="outline" size="lg" asChild>
                                            <Link to="/features">
                                                Learn More
                                            </Link>
                                        </Button>
                                    </div>
                                </div>
                            </div>
                        )}
                    </div>
                </section>
            </main>
            <Footer />
        </div>
    );
};

export default InteractiveDemo; 